// auto-generated header by CodeFromTemplate - Connected Vision - https://github.com/ConnectedVision
// CodeFromTemplate Version: 0.3 alpha
// stubs/Stub_VideoImporter_ModuleDescription.h
// NEVER TOUCH this file!

#ifndef Stub_VideoImporter_ModuleDescription_def
#define Stub_VideoImporter_ModuleDescription_def

// --> Do NOT EDIT <--
namespace ConnectedVision {
namespace Module {
namespace VideoImporter {

/// module description
// --> Do NOT EDIT <--
static const char _moduleDescription[] =
	"{\n"
	"	\"name\": \"VideoImporter\",\n"
	"	\"description\": \"This module imports video frames as well as video meta data from .avi files. It has 2 metadata output pins and 3 raw frame output pins and a png output pin.\",\n"
	"	\"version\": 0.1,\n"
	"	\"moduleID\": \"VideoImporter\",\n"
	"	\"moduleURI\": \"\",\n"
	"	\"moduleLogoURI\": \"VideoImporter.png\",\n"
	"	\"author\": \"Connected Vision\",\n"
	"	\"params\": {\n"
	"		\"type\": \"object\",\n"
	"		\"properties\": {\n"
	"			\"filename\": {\n"
	"				\"description\": \"network path to video file\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"filepath\"\n"
	"			},\n"
	"			\"deinterlaceMode\": {\n"
	"				\"type\": \"string\",\n"
	"				\"description\": \"deinterlace mode (modes are: 'AUTO' ... deinterlaces dependent on the interlaced flag of the video source, 'FORCE' ... forces deinterlacing, 'OFF' ... disables deinterlacing\",\n"
	"				\"enum\": [\n"
	"					\"AUTO\",\n"
	"					\"FORCE\",\n"
	"					\"OFF\"\n"
	"				],\n"
	"				\"required\": false,\n"
	"				\"default\": \"AUTO\"\n"
	"			},\n"
	"			\"recordingDateTime\": {\n"
	"				\"description\": \"recording date (start time of video)\",\n"
	"				\"required\": false,\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"unit\": \"ms\",\n"
	"				\"default\": 0\n"
	"			},\n"
	"			\"timestampStart\": {\n"
	"				\"description\": \"stable results start time (only considred when Trigger input pin is connected)\",\n"
	"				\"required\": false,\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"unit\": \"ms\",\n"
	"				\"minimum\": 0,\n"
	"				\"default\": 0\n"
	"			}\n"
	"		}\n"
	"	}\n"
	"}";

/// input description
// --> Do NOT EDIT <--
static const char _inputPinDescription[] =
	"[\n"
	"	{\n"
	"		\"name\": \"Trigger\",\n"
	"		\"id\": \"Trigger\",\n"
	"		\"description\": \"Trigger pulse used as signal for the generation of a bounding box.\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"application/json\",\n"
	"		\"minPinCount\": 0,\n"
	"		\"properties\": {\n"
	"			\"id\": {\n"
	"				\"description\": \"\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"configID\": {\n"
	"				\"description\": \"\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"timestamp\": {\n"
	"				\"description\": \"timestamp in milliseconds since 1970-01-01 00:00:00.000 UTC\",\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"ms\"\n"
	"			}\n"
	"		}\n"
	"	}\n"
	"]";

/// output description
// --> Do NOT EDIT <--
static const char _outputPinDescription[] =
	"[\n"
	"	{\n"
	"		\"name\": \"Video Metadata\",\n"
	"		\"id\": \"VideoMetadata\",\n"
	"		\"description\": \"video meta data\",\n"
	"		\"static\": true,\n"
	"		\"type\": \"application/json\",\n"
	"		\"properties\": {\n"
	"			\"id\": {\n"
	"				\"description\": \"Object ID\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"configID\": {\n"
	"				\"description\": \"job / config ID\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"filename\": {\n"
	"				\"description\": \"filename\",\n"
	"				\"required\": true,\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"filepath\",\n"
	"				\"unit\": \"\"\n"
	"			},\n"
	"			\"timestamp\": {\n"
	"				\"description\": \"start time\",\n"
	"				\"required\": true,\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"unit\": \"ms\"\n"
	"			},\n"
	"			\"lasttimestamp\": {\n"
	"				\"description\": \"end time\",\n"
	"				\"required\": true,\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"unit\": \"ms\"\n"
	"			},\n"
	"			\"width\": {\n"
	"				\"description\": \"width of video in pixels\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"pixel\",\n"
	"				\"type\": \"integer\"\n"
	"			},\n"
	"			\"height\": {\n"
	"				\"description\": \"height of video in pixels\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"pixel\",\n"
	"				\"type\": \"integer\"\n"
	"			},\n"
	"			\"numberofframes\": {\n"
	"				\"description\": \"number of frames in video\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"\",\n"
	"				\"type\": \"integer\"\n"
	"			},\n"
	"			\"fps\": {\n"
	"				\"description\": \"number of frames per second\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"frames/sec\",\n"
	"				\"type\": \"number\"\n"
	"			}\n"
	"		}\n"
	"	},\n"
	"	{\n"
	"		\"name\": \"Frame Metadata\",\n"
	"		\"id\": \"FrameMetadata\",\n"
	"		\"description\": \"frame meta data\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"application/json\",\n"
	"		\"properties\": {\n"
	"			\"id\": {\n"
	"				\"description\": \"Object ID\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"configID\": {\n"
	"				\"description\": \"job / config ID\",\n"
	"				\"type\": \"string\",\n"
	"				\"exttype\": \"id\",\n"
	"				\"unit\": \"md5\"\n"
	"			},\n"
	"			\"timestamp\": {\n"
	"				\"description\": \"frame time\",\n"
	"				\"type\": \"integer\",\n"
	"				\"exttype\": \"timestamp\",\n"
	"				\"unit\": \"ms\"\n"
	"			},\n"
	"			\"framenumber\": {\n"
	"				\"description\": \"frame number\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"\",\n"
	"				\"type\": \"integer\"\n"
	"			},\n"
	"			\"width\": {\n"
	"				\"description\": \"width of frame in pixels\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"pixel\",\n"
	"				\"type\": \"integer\"\n"
	"			},\n"
	"			\"height\": {\n"
	"				\"description\": \"height of frame in pixels\",\n"
	"				\"required\": true,\n"
	"				\"unit\": \"pixel\",\n"
	"				\"type\": \"integer\"\n"
	"			}\n"
	"		}\n"
	"	},\n"
	"	{\n"
	"		\"name\": \"RAW YUV420 Image\",\n"
	"		\"id\": \"RAWYUV420-Image\",\n"
	"		\"description\": \"yuv420 binary image data\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"image/rawyuv420\",\n"
	"		\"properties\": {}\n"
	"	},\n"
	"	{\n"
	"		\"name\": \"RAW BGR24 Image\",\n"
	"		\"id\": \"RAWBGR24-Image\",\n"
	"		\"description\": \"bgr24 binary image data\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"image/rawbgr24\",\n"
	"		\"properties\": {}\n"
	"	},\n"
	"	{\n"
	"		\"name\": \"RAW RGB24 Image\",\n"
	"		\"id\": \"RAWRGB24-Image\",\n"
	"		\"description\": \"rgb24 binary image data\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"image/rawrgb24\",\n"
	"		\"properties\": {}\n"
	"	},\n"
	"	{\n"
	"		\"name\": \"PNG Image\",\n"
	"		\"id\": \"PNG-Image\",\n"
	"		\"description\": \"png image\",\n"
	"		\"static\": false,\n"
	"		\"type\": \"image/png\",\n"
	"		\"properties\": {}\n"
	"	}\n"
	"]";

} // namespace VideoImporter
} // namespace Module
} // namespace ConnectedVision

#endif // Stub_VideoImporter_ModuleDescription_def